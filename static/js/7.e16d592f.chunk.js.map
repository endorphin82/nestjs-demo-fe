{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","components/auth/newpass/newpassForm.tsx","containers/auth/newpass/index.tsx","pages/auth/newpass.tsx"],"names":["LockOutlined","props","ref","React","AntdIcon","Object","assign","icon","LockOutlinedSvg","displayName","NewpassForm","Form","useForm","form","history","useHistory","token","URLSearchParams","useLocation","search","get","onFinish","valuefromformlist","console","log","data","password","confirmPassword","validateFields","then","handleSubmit","resetFields","push","rootRoute","catch","error","handleError","className","Item","name","hasFeedback","rules","required","message","Password","prefix","theme","style","color","placeholder","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","type","htmlType","to","connect","state","dispatch","newpass","payload","NewPassActions","NewPassPage"],"mappings":"uIAEeA,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2VAA+V,KAAQ,OAAQ,MAAS,Y,SCK9gBA,EAAe,SAAsBC,EAAOC,GAC9C,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CAC5DC,IAAKA,EACLK,KAAMC,MAIVR,EAAaS,YAAc,eACZN,iBAAiBH,I,yPCGjB,SAASU,EAAYT,GAAyB,MAE5CU,IAAKC,UAAbC,EAFoD,oBAGvDC,EAAUC,cAERC,EAPC,IAAIC,gBAAgBC,cAAcC,QAOrBC,IAAI,SAsBxB,OAEE,kBAAC,IAAD,CAAMC,SAtBR,SAAkBC,GAChBC,QAAQC,IAAIF,GACZ,IAAMG,EAAO,CACXT,MAAOA,EACPU,SAAUJ,EAAkBK,iBAE9Bd,EACGe,iBACAC,MAAK,WACJ5B,EAAM6B,aAAaL,GACnBF,QAAQC,IAAIC,GACZZ,EAAKkB,cACLjB,EAAQkB,KAAKC,QAEdC,OAAM,SAACC,GAEN,OADAZ,QAAQC,IAAI,mBAAoBW,GACzBlC,EAAMmC,YAAYD,OAMHE,UAAU,cAClC,wBAAIA,UAAU,cAAd,mBACA,kBAAC,IAAKC,KAAN,CAEEC,KAAK,WACLC,aAAW,EACXC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,+BAElC,kBAAC,IAAMC,SAAP,CACEL,KAAK,WAELM,OAAQ,kBAAC7C,EAAA,EAAD,CAAc8C,MAAM,SAASC,MAAO,CAACC,MAAO,qBAEpDC,YAAY,cAGhB,kBAAC,IAAKX,KAAN,CAEEC,KAAK,kBACLW,aAAc,CAAC,YACfV,aAAW,EACXC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCAGX,gBAAEQ,EAAF,EAAEA,cAAF,MAAsB,CAEpBC,UAFoB,SAEVC,EAAMC,GACd,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,oDAFbD,QAAQE,eAOvB,kBAAC,IAAMb,SAAP,CACEL,KAAK,kBAELM,OAAQ,kBAAC7C,EAAA,EAAD,CAAc8C,MAAM,SAASC,MAAO,CAACC,MAAO,qBACpDC,YAAY,sBAIhB,kBAAC,IAAKX,KAAN,KACE,kBAAC,IAAD,CAAQoB,KAAK,UAAUC,SAAS,SAAStB,UAAU,qBAAnD,mBADF,MAIK,kBAAC,IAAD,CAAMuB,GAAG,WAAT,mBC5EX,IAKeC,eALS,SAACC,GAAD,MAAwB,MACrB,SAACC,GAAD,MAAyB,CAClDC,QAAS,SAACC,GAAD,OAAuBF,EAASG,IAAeF,QAAQC,QAGnDJ,EAbf,SAA0B5D,GACxB,OACE,yBAAKoC,UAAU,wBACb,kBAAC3B,EAAD,CAAaoB,aAAc7B,EAAM+D,QAAS5B,YAAab,QAAQY,YCXtD,SAASgC,IACtB,OACE,kBAAC,EAAD","file":"static/js/7.e16d592f.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default React.forwardRef(LockOutlined);","import React from 'react';\nimport {Form, Input, Button} from 'antd';\nimport {LockOutlined} from '@ant-design/icons';\n\nimport './styles.scss';\nimport {Link, useHistory, useLocation} from 'react-router-dom';\nimport {INewpass} from '../../../types';\nimport {rootRoute} from \"../../../redux/constants/auth\";\n\ninterface IForgotFormProps {\n  handleSubmit(values: INewpass): void,\n\n  handleError(error: any): void,\n}\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nexport default function NewpassForm(props: IForgotFormProps) {\n  // @ts-ignore\n  const [form] = Form.useForm()\n  let history = useHistory();\n  const query = useQuery();\n  const token = query.get(\"token\")\n\n  function onFinish(valuefromformlist: any): void {\n    console.log(valuefromformlist);\n    const data = {\n      token: token,\n      password: valuefromformlist.confirmPassword\n    } as INewpass\n    form\n      .validateFields()\n      .then(() => {\n        props.handleSubmit(data);\n        console.log(data);\n        form.resetFields();\n        history.push(rootRoute)\n      })\n      .catch((error: any) => {\n        console.log('Validate Failed:', error);\n        return props.handleError(error);\n      });\n  }\n\n  return (\n    // @ts-ignore\n    <Form onFinish={onFinish} className=\"login-form\">\n      <h3 className=\"main-label\">CHANGE PASSWORD</h3>\n      <Form.Item\n        // @ts-ignore\n        name=\"password\"\n        hasFeedback\n        rules={[{required: true, message: 'Please add your Password!'}]}\n      >\n        <Input.Password\n          name=\"password\"\n          // @ts-ignore\n          prefix={<LockOutlined theme=\"filled\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n          // type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item\n        // @ts-ignore\n        name=\"confirmPassword\"\n        dependencies={['password']}\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please confirm your password!',\n          },\n          // @ts-ignore\n          ({getFieldValue}) => ({\n            // @ts-ignore\n            validator(rule, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n              return Promise.reject('The two passwords that you entered do not match!');\n            },\n          }),\n        ]}\n      >\n        <Input.Password\n          name=\"confirmPassword\"\n          // @ts-ignore\n          prefix={<LockOutlined theme=\"filled\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n          placeholder=\"Confirm Password\"\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Change Password\n        </Button>\n        Or <Link to=\"/signup\">register now!</Link>\n      </Form.Item>\n    </Form>\n  )\n}\n\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport './styles.scss';\nimport {IRootState} from '../../../redux/reducers/state';\nimport {Dispatch} from 'redux';\nimport {INewpass} from '../../../types';\nimport {NewPassActions} from '../../../redux/actions';\nimport NewpassForm from '../../../components/auth/newpass/newpassForm';\n\ntype INewPassContainerProps = ReturnType<typeof mapDispatchToProps>;\n\nfunction NewPassContainer(props: INewPassContainerProps) {\n  return (\n    <div className=\"login-form-container\">\n      <NewpassForm handleSubmit={props.newpass} handleError={console.error}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: IRootState) => ({});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  newpass: (payload: INewpass) => dispatch(NewPassActions.newpass(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPassContainer);\n","import React from 'react'\nimport NewPassContainer from \"../../containers/auth/newpass\";\n\n\nexport default function NewPassPage() {\n  return (\n    <NewPassContainer />\n  )\n}\n"],"sourceRoot":""}