{"version":3,"sources":["components/auth/login/loginForm.tsx","containers/auth/login/index.tsx","pages/auth/login.tsx"],"names":["LoginForm","props","Form","useForm","form","onFinish","valuefromformlist","validateFields","then","handleSubmit","resetFields","catch","error","console","log","handleError","className","Item","name","rules","required","message","type","prefix","MailOutlined","style","color","placeholder","Password","LockOutlined","initialValue","valuePropName","to","htmlType","clientId","buttonText","isSignedIn","connect","state","dispatch","signIn","payload","AuthActions","LoginPage"],"mappings":"yUAgBe,SAASA,EAAUC,GAAwB,MAEvCC,IAAKC,UAAbC,EAF+C,oBAiBtD,OAEI,kBAAC,IAAD,CAAMC,SAfV,SAAkBC,GACdF,EACKG,iBACAC,MAAK,WACFP,EAAMQ,aAAaH,GACnBF,EAAKM,iBAERC,OAAM,SAACC,GAEJ,OADAC,QAAQC,IAAI,mBAAoBF,GACzBX,EAAMc,YAAYH,OAMPI,UAAU,cAChC,wBAAIA,UAAU,cAAd,UACA,kBAAC,IAAKC,KAAN,CAEIC,KAAK,QACLC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,4BAElC,kBAAC,IAAD,CACIC,KAAK,QACLJ,KAAK,QAELK,OAAQ,kBAACC,EAAA,EAAD,CAAcC,MAAO,CAACC,MAAO,qBACrCC,YAAY,WAGpB,kBAAC,IAAKV,KAAN,CAEIC,KAAK,WACLC,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,+BAElC,kBAAC,IAAMO,SAAP,CAEIL,OAAQ,kBAACM,EAAA,EAAD,CAAcJ,MAAO,CAACC,MAAO,qBACrCR,KAAK,WACLS,YAAY,cAGpB,kBAAC,IAAKV,KAAN,CAEIC,KAAK,WACLY,cAAc,EACdC,cAAc,WAEd,kBAAC,IAAD,CAAUb,KAAK,YAAf,gBAIJ,kBAAC,IAAKD,KAAN,KACI,kBAAC,IAAD,CAAMe,GAAG,UAAUhB,UAAU,qBAA7B,mBAGA,kBAAC,IAAD,CAAQM,KAAK,UAAUW,SAAS,SAASjB,UAAU,qBAAnD,UAJJ,MAOO,kBAAC,IAAD,CAAMgB,GAAG,WAAT,iBAPP,MAQO,6BACH,kBAAC,cAAD,CACIE,SAAS,2EACTC,WAAW,QACXC,YAAY,O,mBChEhC,IAOeC,eAPS,SAACC,GAAD,MAAwB,MAGrB,SAACC,GAAD,MAAyB,CAChDC,OAAQ,SAACC,GAAD,OAAqBF,EAASG,IAAYF,OAAOC,QAG9CJ,EAff,SAAwBpC,GACpB,OACI,yBAAKe,UAAU,wBACX,kBAAChB,EAAD,CAAWS,aAAcR,EAAMuC,OAAQzB,YAAaF,QAAQD,YCZzD,SAAS+B,IACpB,OACI,kBAAC,EAAD","file":"static/js/9.e414f8b7.chunk.js","sourcesContent":["import React from 'react';\nimport {Form, Input, Button, Checkbox} from 'antd';\nimport {LockOutlined, MailOutlined} from '@ant-design/icons';\n\nimport Icon from '@ant-design/icons'\nimport './styles.scss';\nimport {Link} from 'react-router-dom';\nimport {ILogin} from '../../../types';\nimport {GoogleLogin} from \"react-google-login\";\n\ninterface ILoginFormProps {\n    handleSubmit(values: ILogin): void,\n\n    handleError(error: any): void,\n}\n\nexport default function LoginForm(props: ILoginFormProps) {\n    // @ts-ignore\n    const [form] = Form.useForm()\n\n    function onFinish(valuefromformlist: any): void {\n        form\n            .validateFields()\n            .then(() => {\n                props.handleSubmit(valuefromformlist);\n                form.resetFields();\n            })\n            .catch((error: any) => {\n                console.log('Validate Failed:', error);\n                return props.handleError(error);\n            });\n    }\n\n    return (\n        // @ts-ignore\n        <Form onFinish={onFinish} className=\"login-form\">\n            <h3 className=\"main-label\">LOG IN</h3>\n            <Form.Item\n                // @ts-ignore\n                name=\"email\"\n                rules={[{required: true, message: 'Please add your email!'}]}\n            >\n                <Input\n                    type=\"email\"\n                    name=\"email\"\n                    // @ts-ignore\n                    prefix={<MailOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    placeholder=\"Email\"\n                />\n            </Form.Item>\n            <Form.Item\n                // @ts-ignore\n                name=\"password\"\n                rules={[{required: true, message: 'Please add your Password!'}]}\n            >\n                <Input.Password\n                    // @ts-ignore\n                    prefix={<LockOutlined style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                />\n            </Form.Item>\n            <Form.Item\n                // @ts-ignore\n                name=\"remember\"\n                initialValue={true}\n                valuePropName='checked'\n            >\n                <Checkbox name=\"remember\"\n                    // onChange={handleChange}\n                >Remember me</Checkbox>\n            </Form.Item>\n            <Form.Item>\n                <Link to=\"/forgot\" className=\"login-form-forgot\">\n                    Forgot password\n                </Link>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Log in\n                </Button>\n                Or <Link to=\"/signup\">register now!</Link>\n                Or <div>\n                <GoogleLogin\n                    clientId=\"319511837370-6h11919mja93u8rijnlbu3h5j8kt9k5l.apps.googleusercontent.com\"\n                    buttonText=\"Login\"\n                    isSignedIn={true}\n                />\n            </div>\n\n            </Form.Item>\n        </Form>\n    )\n}\n\n","import React from 'react';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport LoginForm from '../../../components/auth/login/loginForm';\n\nimport './styles.scss';\nimport { IRootState } from '../../../redux/reducers/state';\nimport { Dispatch } from 'redux';\nimport { ILogin } from '../../../types';\nimport { AuthActions } from '../../../redux/actions';\n\ntype ILoginContainerProps = ReturnType<typeof mapDispatchToProps>;\n\nfunction LoginContainer(props: ILoginContainerProps) {\n    return (\n        <div className=\"login-form-container\">\n            <LoginForm handleSubmit={props.signIn} handleError={console.error} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    signIn: (payload: ILogin) => dispatch(AuthActions.signIn(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\n","import React from 'react'\nimport LoginContainer from '../../containers/auth/login'\n\nexport default function LoginPage() {\n    return (\n        <LoginContainer />\n    )\n}\n"],"sourceRoot":""}